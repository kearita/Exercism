## Registers

# | Register | Usage     | Type    | Description                                      |
# | -------- | --------- | ------- | ------------------------------------------------ |
# | `$a0`    | input     | integer | year to check                                    |
# | `$v0`    | output    | boolean | input is leap year (`0` = `false`, `1` = `true`) |
# | `$t0-9`  | temporary | any     | used for temporary storage                       |

.globl is_leap_year

# check conditions: year % 4 is 0 && (year % 100 is not 0 or year % 400 is 0)
is_leap_year:
        # rem puts remainder from dividing int in a0 by integer into reg t0
        rem $t0 $a0 400            # put remainder of year % 400 into t0
        beqz $t0 _leap_year_true_  # jmp to label if t0 has 0

        rem $t0 $a0 100            # put remainder of year % 100 into t0
        beqz $t0 _leap_year_false  # jmp to label if t0 does not have 0

        rem $t0 $a0 4              # put remainder of year % 4 into t0
        beqz $t0 _leap_year_true_  # jmp to label if t0 has 0
 
        b _leap_year_false         # unconditional branch jmp to label



_leap_year_true_:
        li $v0 1   # move immediate value 1 into v0 (output)
        jr $ra     # jump to ra (return addr reg)
_leap_year_false:
        li $v0 0   # move immediate value 0 into v0 (output)
        jr $ra     # jump to ra (return addr reg)


